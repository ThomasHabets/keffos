     1                                  # 1 "<stdin>"
     2                                  # 1 "<built-in>"
     3                                  # 1 "<command line>"
     4                                  # 1 "<stdin>"
     5                                  # 9 "<stdin>"
     6                                  # 1 "/home/thompa/scm/keffos/kernel/include/keffos/config.h" 1
     7                                  # 10 "<stdin>" 2
     8                                  # 1 "/home/thompa/scm/keffos/kernel/include/sys/asm.h" 1
     9                                  # 11 "<stdin>" 2
    10                                  
    11                                   bits 16
    12                                  
    13                                   SECTION .text
    14                                  
    15                                  global _start
    16                                  _start:
    17 00000000 E96001                   jmp past_data
    18                                  
    19                                  
    20                                  
    21                                  
    22 00000003 04                      sects db 4
    23                                  
    24                                  
    25 00000004 00                      kdrive db 0
    26 00000005 00                      khead db 0
    27 00000006 06                      ksect db 6
    28 00000007 00                      ktrack db 0
    29 00000008 1D                      ksectors db 0x22 - 5
    30                                  
    31 00000009 00                      rdrive db 0
    32 0000000A 00                      rhead db 0
    33 0000000B 01                      rsect db 1
    34 0000000C 01                      rtrack db 1
    35 0000000D 1D                      rsectors db 0x22 - 5
    36                                  
    37 0000000E 12                      max_sector db 18
    38 0000000F 496E6974696C697A69-     setupmsg db 'Initilizing kernel 0.0.1...',0
    39 00000018 6E67206B65726E656C-
    40 00000021 20302E302E312E2E2E-
    41 0000002A 00                 
    42 0000002B 73746172745F6B6572-     startk_ret db 'start_kernel() returned. WTF!?! (yeah, bug, bigtime)',0
    43 00000034 6E656C282920726574-
    44 0000003D 75726E65642E205754-
    45 00000046 46213F212028796561-
    46 0000004F 682C206275672C2062-
    47 00000058 696774696D652900   
    48 00000060 596F757220636F6D70-     no386msg db 'Your computer sucks, compile the 8086 version',0
    49 00000069 75746572207375636B-
    50 00000072 732C20636F6D70696C-
    51 0000007B 652074686520383038-
    52 00000084 362076657273696F6E-
    53 0000008D 00                 
    54 0000008E 0D0A50726F63657373-     is386msg db 0xd,0xa,'Processor is 80386 or better, cool',0xd,0xa,0
    55 00000097 6F7220697320383033-
    56 000000A0 3836206F7220626574-
    57 000000A9 7465722C20636F6F6C-
    58 000000B2 0D0A00             
    59 000000B5 456E61626C696E6720-     a20onmsg db 'Enabling A20...',0
    60 000000BE 4132302E2E2E00     
    61 000000C5 476F696E6720746F20-     pmodemsg db 'Going to protected mode and going to kernel entry point',0xd,0xa,0
    62 000000CE 70726F746563746564-
    63 000000D7 206D6F646520616E64-
    64 000000E0 20676F696E6720746F-
    65 000000E9 206B65726E656C2065-
    66 000000F2 6E74727920706F696E-
    67 000000FB 740D0A00           
    68 000000FF 507265737320616E79-     pressanymsg db 'Press any key to continue...',0
    69 00000108 206B657920746F2063-
    70 00000111 6F6E74696E75652E2E-
    71 0000011A 2E00               
    72 0000011C 52656164206572726F-     readerrmsg db 'Read error!',0
    73 00000125 722100             
    74 00000128 496D6167652062726F-     imageerrmsg db 'Image broken!',0
    75 00000131 6B656E2100         
    76 00000136 4C6F6164696E67206B-     lkernelmsg db 'Loading kernel...',0
    77 0000013F 65726E656C2E2E2E00 
    78 00000148 4C6F6164696E672072-     lramdrivemsg db 'Loading ramdrive...',0
    79 00000151 616D64726976652E2E-
    80 0000015A 2E00               
    81 0000015C 6F6B0D0A00              okmsg db 'ok', 0xd, 0xa, 0
    82 00000161 0000                    textpos dw 0
    83                                  
    84                                  
    85                                  
    86                                  
    87                                  past_data:
    88 00000163 8CC8                     mov ax, cs
    89 00000165 8ED8                     mov ds, ax
    90 00000167 8EC0                     mov es, ax
    91                                  
    92 00000169 E80802                   call check_cpu
    93                                  
    94                                  
    95                                  
    96                                  
    97                                  
    98                                  
    99 0000016C BD[3601]                 mov bp, lkernelmsg
   100 0000016F E8EC01                   call printstr
   101                                  
   102 00000172 FF36[0400]               push word [kdrive]
   103 00000176 FF36[0500]               push word [khead]
   104 0000017A FF36[0600]               push word [ksect]
   105 0000017E FF36[0700]               push word [ktrack]
   106 00000182 FF36[0800]               push word [ksectors]
   107 00000186 680000                   push word 0
   108 00000189 680030                   push word 0x3000
   109 0000018C 66684B656666             push dword 'Keff'
   110 00000192 E81702                   call readsectors
   111 00000195 81C41200                 add sp, 0x12
   112                                  
   113 00000199 BD[5C01]                 mov bp, okmsg
   114 0000019C E8BF01                   call printstr
   115                                  
   116                                  
   117                                  
   118                                  
   119 0000019F BD[4801]                 mov bp, lramdrivemsg
   120 000001A2 E8B901                   call printstr
   121                                  
   122 000001A5 FF36[0900]               push word [rdrive]
   123 000001A9 FF36[0A00]               push word [rhead]
   124 000001AD FF36[0B00]               push word [rsect]
   125 000001B1 FF36[0C00]               push word [rtrack]
   126 000001B5 FF36[0D00]               push word [rsectors]
   127 000001B9 680000                   push word 0
   128 000001BC 680070                   push word 0x7000
   129 000001BF 66684B6F5244             push dword 'KoRD'
   130                                  
   131 000001C5 81C41200                 add sp, 0x12
   132                                  
   133 000001C9 BD[5C01]                 mov bp, okmsg
   134 000001CC E88F01                   call printstr
   135                                  
   136                                  
   137                                  
   138                                  
   139                                  
   140 000001CF BD[B500]                 mov bp, a20onmsg
   141 000001D2 E88901                   call printstr
   142 000001D5 E91400                   jmp go32bitnowlolz
   143 000001D8 E82302                   call empty_8042
   144                                  
   145 000001DB B0D1                     mov al, 0xD1
   146 000001DD E664                     out 0x64, al
   147                                  
   148 000001DF E81C02                   call empty_8042
   149                                  
   150 000001E2 B0DF                     mov al, 0xDF
   151 000001E4 E660                     out 0x60, al
   152                                  
   153 000001E6 BD[5C01]                 mov bp, okmsg
   154 000001E9 E87201                   call printstr
   155                                  
   156                                  
   157                                  
   158                                  
   159                                  go32bitnowlolz:
   160 000001EC BD[C500]                 mov bp, pmodemsg
   161 000001EF E86C01                   call printstr
   162                                  
   163                                  
   164                                  
   165                                  
   166 000001F2 B403                     mov ah, 0x3
   167 000001F4 31DB                     xor bx, bx
   168 000001F6 CD10                     int 0x10
   169 000001F8 8916[6101]               mov [textpos], dx
   170                                  
   171                                  
   172                                  
   173                                  
   174                                  
   175 000001FC FA                       cli
   176 000001FD B0FF                     mov al, 0xFF
   177 000001FF E621                     out 0x21, al
   178                                  
   179                                  
   180 00000201 680000                   push word 0x0
   181 00000204 07                       pop es
   182 00000205 0E                       push cs
   183 00000206 1F                       pop ds
   184 00000207 FC                       cld
   185 00000208 31FF                     xor di, di
   186 0000020A BE[1404]                 mov si, gdt
   187 0000020D B90600                   mov cx, gdt_size / 4
   188 00000210 F366A5                   rep movsd
   189 00000213 B9FA3F                   mov cx, (0x10000 - gdt_size) / 4
   190 00000216 66B800000000             mov eax, 0
   191 0000021C F366AB                   rep stosd
   192                                  
   193                                  
   194 0000021F 680010                   push word 0x1000
   195 00000222 07                       pop es
   196 00000223 31FF                     xor di, di
   197 00000225 66B800000000             mov eax, 0
   198 0000022B B90002                   mov cx, 0x200
   199 0000022E F366AB                   rep stosd
   200                                  
   201 00000231 2E0F0116[3204]           lgdt [cs:gdtr]
   202 00000237 2E0F011E[2C04]           lidt [cs:idtr]
   203                                  # 193 "<stdin>"
   204 0000023D B011                            mov al,0x11
   205 0000023F E620                            out 0x20,al
   206 00000241 E8CD01                          call delay
   207 00000244 E6A0                            out 0xA0,al
   208 00000246 E8C801                          call delay
   209                                  
   210                                  
   211 00000249 B020                            mov al,0x20
   212 0000024B E621                            out 0x21,al
   213 0000024D E8C101                          call delay
   214 00000250 B028                            mov al,0x28
   215 00000252 E6A1                            out 0xA1,al
   216 00000254 E8BA01                          call delay
   217                                  
   218                                  
   219                                  
   220 00000257 B004                            mov al,00000100b
   221 00000259 E621                            out 0x21,al
   222 0000025B E8B301                          call delay
   223 0000025E B002                            mov al,00000010b
   224 00000260 E6A1                            out 0xA1,al
   225 00000262 E8AC01                          call delay
   226                                  
   227                                  
   228                                  
   229 00000265 B001                            mov al,0x01
   230 00000267 E621                            out 0x21,al
   231 00000269 E8A501                          call delay
   232 0000026C E6A1                            out 0xA1,al
   233 0000026E E8A001                          call delay
   234                                  
   235                                  
   236                                  
   237                                  
   238 00000271 B000                     mov al,00000000b
   239 00000273 E6A1                            out 0xA1,al
   240 00000275 E89901                          call delay
   241                                  
   242                                  
   243 00000278 B000                     mov al,00000000b
   244 0000027A E621                            out 0x21,al
   245                                  
   246                                  
   247                                  
   248                                  
   249                                  
   250                                  
   251                                  
   252 0000027C 0F20C0                   mov eax, cr0
   253 0000027F 660D01000000             or eax, 1
   254 00000285 0F22C0                   mov cr0, eax
   255 00000288 EB00                     jmp short .flush
   256                                  .flush:
   257                                  
   258                                  
   259                                  
   260                                  
   261                                  
   262 0000028A B81000                   mov ax, 2 << 3
   263 0000028D 8ED0                      mov ss, ax
   264 0000028F 66BCFEFF0000             mov esp, 0xFFFE
   265                                  
   266                                  
   267                                  
   268 00000295 B81000                   mov ax, 2 << 3
   269 00000298 8ED8                     mov ds, ax
   270 0000029A 8EC0                     mov es, ax
   271 0000029C 8EE0                     mov fs, ax
   272 0000029E 8EE8                     mov gs, ax
   273                                  
   274 000002A0 B83100                   mov ax, '1'
   275 000002A3 A20080                   mov [(0x000b8000)], al
   276                                  
   277 000002A6 3E6766A100000300         mov eax, [ds:dword (0x00030000)]
   278 000002AE 663D4B656666             cmp eax, 'Keff'
   279 000002B4 E90D00                   jmp goon
   280 000002B7 B82F00                   mov ax, '/'
   281 000002BA A20080                   mov [(0x000b8000)], al
   282 000002BD B84D00                   mov ax, 'M'
   283 000002C0 A20280                   mov [(0x000b8000) + 2], al
   284 000002C3 F4                       hlt
   285                                  
   286                                  goon:
   287 000002C4 B83200                   mov ax, '2'
   288 000002C7 A20080                   mov [(0x000b8000)], al
   289                                  # 286 "<stdin>"
   290 000002CA FA                       cli
   291                                  
   292 000002CB 66BB00100100             mov ebx, 0x11000
   293 000002D1 6667C70301200100         mov dword [ebx], 0x12000 + 1
   294 000002D9 6681C3000C0000           add ebx, 4 * 0x300
   295 000002E0 6667C70301300100         mov dword [ebx], 0x13000 + 1
   296                                  
   297                                  
   298                                  
   299                                  
   300 000002E8 66B900000000             mov ecx, 0
   301 000002EE 66BB00200100             mov ebx, 0x12000
   302 000002F4 66BA00300100             mov edx, 0x13000
   303 000002FA 66B803000000             mov eax, 1 | 2
   304                                  .loop:
   305 00000300 66678903                 mov [ebx], eax
   306 00000304 66678902                 mov [edx], eax
   307 00000308 6681C304000000           add ebx, 4
   308 0000030F 6681C204000000           add edx, 4
   309 00000316 660500100000             add eax, 0x1000
   310 0000031C 6641                     inc ecx
   311 0000031E 6681F900040000           cmp ecx, 0x400
   312 00000325 75D9                     jne .loop
   313                                  
   314 00000327 66B800100100             mov eax, 0x11000
   315 0000032D 0F22D8                   mov cr3, eax
   316 00000330 0F20C0                   mov eax, cr0
   317 00000333 660D00000080             or eax, 0x80000000
   318 00000339 0F22C0                   mov cr0, eax
   319 0000033C EB00                     jmp short .flush
   320                                  .flush:
   321 0000033E 6766A1000003C0           mov eax, [dword ((0xc0000000)+(0x00030000))]
   322 00000345 663D4B656666             cmp eax, 'Keff'
   323                                  
   324                                  
   325 0000034B 66BCFEFF00C0             mov esp, ((0xc0000000) + 0xfffe)
   326 00000351 66EA0C0003C00800         jmp dword 1 << 3:0xC003000C
   327                                  
   328                                  .sigfail:
   329 00000359 E84100                   call changecolor
   330 0000035C EBFE                    .iloop: jmp .iloop
   331                                  # 340 "<stdin>"
   332                                  printstr:
   333                                  .strloop:
   334 0000035E 268A4600                 mov al, [es:bp]
   335 00000362 20C0                     and al, al
   336 00000364 7406                     jz .strdone
   337 00000366 E80400                   call printchr
   338 00000369 45                       inc bp
   339 0000036A EBF2                     jmp .strloop
   340                                  .strdone:
   341 0000036C C3                            ret
   342                                  
   343                                  
   344                                  
   345                                  
   346                                  printchr:
   347 0000036D B40E                     mov ah, 0xE
   348 0000036F 31DB                     xor bx, bx
   349 00000371 CD10                     int 0x10
   350 00000373 C3                       ret
   351                                  
   352                                  
   353                                  
   354                                  
   355                                  check_cpu:
   356 00000374 9C                       pushf
   357 00000375 30E4                     xor ah,ah
   358 00000377 50                       push ax
   359 00000378 9D                       popf
   360 00000379 9C                       pushf
   361 0000037A 58                       pop ax
   362 0000037B 80E4F0                   and ah, 0xF0
   363 0000037E 80FCF0                   cmp ah, 0xF0
   364 00000381 7413                     je .no386
   365                                  
   366 00000383 B470                     mov ah, 0x70
   367 00000385 50                       push ax
   368 00000386 9D                       popf
   369 00000387 9C                       pushf
   370 00000388 58                       pop ax
   371 00000389 80E470                   and ah, 0x70
   372 0000038C 7408                     jz .no386
   373                                  
   374 0000038E 9D                       popf
   375 0000038F BD[8E00]                 mov bp, is386msg
   376 00000392 E8C9FF                   call printstr
   377 00000395 C3                       ret
   378                                  .no386:
   379 00000396 BD[6000]                 mov bp, no386msg
   380 00000399 E8C2FF                   call printstr
   381 0000039C F4                       hlt
   382                                  
   383                                  
   384                                  
   385                                  
   386                                  
   387                                  changecolor:
   388 0000039D B000                     mov al, 0
   389 0000039F BAC803                   mov dx, 0x3c8
   390 000003A2 EE                       out dx, al
   391                                  
   392 000003A3 BAC903                   mov dx, 0x3c9
   393 000003A6 B03C                     mov al, 60
   394 000003A8 EE                       out dx, al
   395 000003A9 EE                       out dx, al
   396 000003AA EE                       out dx, al
   397 000003AB C3                       ret
   398                                  
   399                                  
   400                                  
   401                                  
   402                                  
   403                                  readsectors:
   404 000003AC 89E5                     mov bp, sp
   405 000003AE 60                       pusha
   406 000003AF 1E                       push ds
   407                                  
   408 000003B0 16                       push ss
   409 000003B1 1F                       pop ds
   410                                  
   411 000003B2 30E4                     xor ah,ah
   412 000003B4 8A560E                   mov dl, [bp + 0xE]
   413 000003B7 CD13                     int 0x13
   414                                  
   415 000003B9 8E4606                   mov es, [bp + 6]
   416 000003BC 8A460A                   mov al, [bp + 0xA]
   417 000003BF B402                     mov ah, 0x02
   418 000003C1 8B5E08                   mov bx, [bp + 8]
   419 000003C4 8A6E0C                   mov ch, [bp + 0xC]
   420 000003C7 8A4E0E                   mov cl, [bp + 0xE]
   421 000003CA 8A7610                   mov dh, [bp + 0x10]
   422 000003CD 8A5612                   mov dl, [bp + 0x12]
   423 000003D0 CD13                     int 0x13
   424 000003D2 7203                     jc .loadfail
   425                                  
   426 000003D4 E90A00                   jmp .loadedok
   427                                  
   428                                  .loadfail:
   429 000003D7 0E                       push cs
   430 000003D8 07                       pop es
   431 000003D9 BD[1C01]                 mov bp, readerrmsg
   432 000003DC E87FFF                   call printstr
   433 000003DF EBFE                    .lup: jmp .lup
   434                                  .loadedok:
   435 000003E1 2666A10000               mov eax, [es:0]
   436 000003E6 663B4602                 cmp eax, [bp + 0x2]
   437 000003EA 750B                     jne .goon
   438 000003EC 0E                       push cs
   439 000003ED 07                       pop es
   440 000003EE BD[2801]                 mov bp, imageerrmsg
   441 000003F1 E86AFF                   call printstr
   442 000003F4 F4                      .iloop: hlt
   443 000003F5 EBFD                     jmp .iloop
   444                                  .goon:
   445 000003F7 0E                       push cs
   446 000003F8 07                       pop es
   447                                  
   448 000003F9 1F                       pop ds
   449 000003FA 61                       popa
   450 000003FB 89EC                     mov sp, bp
   451 000003FD C3                       ret
   452                                  
   453                                  
   454                                  
   455                                  
   456                                  
   457 000003FE EB01                    empty_8042: jmp $+3
   458 00000400 E464                                    in al, 0x64
   459 00000402 A801                                    test al, 1
   460 00000404 7406                                    jz .no_output
   461 00000406 EB01                                    jmp $+3
   462 00000408 E460                                    in al, 0x60
   463 0000040A EBF2                                    jmp empty_8042
   464 0000040C A802                    .no_output test al, 2
   465 0000040E 75EE                                    jnz empty_8042
   466 00000410 C3                                      ret
   467                                  delay:
   468 00000411 EB00                            dw 0x00eb
   469 00000413 C3                              ret
   470                                  
   471                                  
   472                                  
   473                                  gdt:
   474                                  descriptor_0: ; null descriptor. generates GPF on access.
   475 00000414 0000                                    dw 0
   476 00000416 0000                                    dw 0
   477 00000418 0000                                    dw 0
   478 0000041A 0000                                    dw 0
   479                                  descriptor_1: ; code segment (exec)
   480 0000041C FFFF                                    dw 0xFFFF ; limit = max
   481 0000041E 0000                                    dw 0x0000 ; low part of base address
   482 00000420 0098                                    dw 0x9800 ; flags and base
   483 00000422 CF00                                    dw 0x00CF ; base and flags
   484                                  descriptor_2: ; data segment (read/write)
   485 00000424 FFFF                                    dw 0xFFFF ; limit = max
   486 00000426 0000                                    dw 0x0000 ; low part of base address
   487 00000428 0092                                    dw 0x9200 ; flags and base
   488 0000042A CF00                                    dw 0x00CF ; base and flags
   489                                  
   490                                  gdt_size equ $-gdt
   491                                  
   492 0000042C FF07                    idtr: dw 0x7FF ; idt limit, 256 IDT entries
   493 0000042E 00000100                                dd 0x00010000 ; idt base (physical addr)
   494                                  
   495 00000432 FFFF                    gdtr: dw 0xFFFF ; gdt limit, 8192 GDT entries
   496 00000434 00000000                                dd 0x00000000 ; gdt base (physical addr)
   497                                  
   498 00000438 00<rept>                filler times 0x800-($-$$) db 0
